version: '3'

volumes:
  postgres_data:
  static_files:

services:
  web:
    container_name: web-container
    build: ./service
    volumes:
      - static_files:/opt/app/staticfiles
      - /tmp/logs/admin/json:/var/log/app
    depends_on:
      - db
    env_file:
      - ./.env

  db:
    container_name: movies-sql-db
    image: postgres:13.0-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data/
      - ./sql/:/docker-entrypoint-initdb.d/
    env_file:
      - ./.env
    ports:
      - "5432:5432"

  nginx:
    container_name: nginx-container
    image: nginx:latest
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./configs:/etc/nginx/conf.d:ro
      - ./data:/data/:ro
      - static_files:/home/app/staticfiles
      - /tmp/logs/nginx/:/var/log/nginx/
    depends_on:
      - web
    ports:
      - "8000:80"

  elasticsearch:
    container_name: elastic-container
    image: docker.io/elastic/elasticsearch:8.2.3
    environment:
      - xpack.security.enabled=false
      - "discovery.type=single-node"
      - "ES_JAVA_OPTS=-Xms750m -Xmx750m"
    ports:
      - 9200:9200
    depends_on:
      - db

  etl:
    container_name: etl-container
    build: ./etl
    env_file:
      - ./.env
    depends_on:
      - elasticsearch
      - db

  redis:
    image: redis:6.0.9
    restart: on-failure
    ports:
      - 6379:6379

  fastapi:
    container_name: fastapi-container
    build:
      context: ./fastapi-solution/
    volumes:
      - /tmp/logs/asynccinema/json:/var/log/app
    env_file:
      - ./.env
    depends_on:
      - redis
      - elasticsearch
    ports:
      - 8002:8000

        #  tests:
        #    container_name: tests-container
        #    build:
        #      context: ./tests/functional/
        #    entrypoint: >
        #      sh -c "pip install --upgrade pip && pip install -r ./requirements.txt &&
        #      python3 ./utils/wait_for_es.py && python3 ./utils/wait_for_redis.py && pytest ./src"
        #    env_file:
        #      - ./.env
